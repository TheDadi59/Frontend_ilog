{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\didan\\\\IdeaProjects\\\\Project_Ilog\\\\Frontend\\\\WebApp-main\\\\WebApp-main\\\\src\\\\components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EventCard from './EventCard'; // Replace with your event card component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventList() {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    // Fetch events from your API or database\n    // ... Implement your event fetching logic here ...\n    fetch('/api/events') // Replace with your API endpoint\n    .then(response => response.json()).then(data => setEvents(data));\n  }, []);\n\n  // Implement functions for event filtering based on your event data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-list\",\n    children: events.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n      event: event\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(EventList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useState","useEffect","EventCard","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","fetch","then","response","json","data","className","children","map","event","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/didan/IdeaProjects/Project_Ilog/Frontend/WebApp-main/WebApp-main/src/components/EventList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EventCard from './EventCard'; // Replace with your event card component\r\n\r\nfunction EventList() {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch events from your API or database\r\n    // ... Implement your event fetching logic here ...\r\n    fetch('/api/events') // Replace with your API endpoint\r\n      .then(response => response.json())\r\n      .then(data => setEvents(data));\r\n  }, []);\r\n\r\n  // Implement functions for event filtering based on your event data\r\n\r\n  return (\r\n    <div className=\"event-list\">\r\n      {events.map(event => (\r\n        <EventCard key={event.id} event={event} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA;IACAQ,KAAK,CAAC,aAAa,CAAC,CAAC;IAAA,CAClBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACET,OAAA;IAAKU,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBR,MAAM,CAACS,GAAG,CAACC,KAAK,iBACfb,OAAA,CAACF,SAAS;MAAgBe,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CApBQD,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAsBlB,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}